name: Starlink Docker Build and Push

on:
  push:
    branches: [ develop ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./src/
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/starlink_app:latest

      - name: Build and push nginx image
        uses: docker/build-push-action@v4
        with:
          context: ./nginx/
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/starlink_nginx:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "/opt/starlink/"

      - name: Generate .env on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE}}
          script: |
            mkdir -p /opt/starlink/
            cd /opt/starlink/
            rm .env
            touch .env
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
            echo "APP_TITLE=${{ secrets.APP_TITLE }}" >> .env
            echo "APP_DESCRIPTION=${{ secrets.APP_DESCRIPTION }}" >> .env
            echo "APP_VERSION=${{ secrets.APP_VERSION }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
            echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> .env
            echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
            echo "NOT_AUTHENTICATED=${{ secrets.NOT_AUTHENTICATED }}" >> .env
            echo "ADMIN1_EMAIL=${{ secrets.ADMIN1_EMAIL }}" >> .env
            echo "ADMIN1_PASSWORD=${{ secrets.ADMIN1_PASSWORD }}" >> .env
            echo "ADMIN2_EMAIL=${{ secrets.ADMIN2_EMAIL }}" >> .env
            echo "ADMIN2_PASSWORD=${{ secrets.ADMIN2_PASSWORD }}" >> .env
            chmod 600 .env

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE}}
          script: |
            cd /opt/starlink/
            docker compose -f docker-compose.production.yml down
            docker compose -f docker-compose.production.yml pull
            docker compose -f docker-compose.production.yml up -d
            docker image prune -f
